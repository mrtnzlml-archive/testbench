<?php

namespace Tests;

use Tester\Assert;

require __DIR__ . '/bootstrap.php';

/**
 * @testCase
 */
class PresenterPresenterTest extends \Tester\TestCase
{
	use \Testbench\TPresenter;


	public function testActionJson()
	{
		$this->checkJson('Presenter:json');
	}


	public function testRenderDefault()
	{
		$this->checkAction('Presenter:default');
	}


	public function testRenderFail()
	{
		Assert::exception(function () {
			$this->checkAction('Presenter:fail');
		}, 'Nette\Application\BadRequestException');
		Assert::same(500, $this->getReturnCode());
	}


	public function testRenderException()
	{
		Assert::exception(function () {
			$this->checkAction('Presenter:exception');
		}, 'Latte\CompileException');
	}


	public function testRenderRedirect()
	{
		$this->checkRedirect('Presenter:redirect', '/x/y');
	}


	public function testRenderRedirectRss()
	{
		$this->checkRedirect('Presenter:redirectRss', '/x/y/rss');
	}


	public function testRenderRss()
	{
		$this->checkRss('Presenter:rss');
	}


	public function testRenderSitemap()
	{
		$this->checkSitemap('Presenter:sitemap');
	}


	public function testHandleSignal()
	{
		$this->checkSignal('Presenter:', 'signal');
	}


	public function testHandleAjaxSignal()
	{
		$this->checkSignal('Presenter:', 'ajaxSignal');
	}


	public function testCreateComponentForm1()
	{
		$this->checkForm('Presenter:', 'form1', [
			'test' => '###', //FIXME: replace with value
			'error' => '###', //FIXME: replace with value
		], '/x/y');
	}


	public function testCreateComponentForm2()
	{
		$this->checkForm('Presenter:', 'form2', [
			'test' => '###', //FIXME: replace with value
		], '/x/y/json');
	}


	public function testCreateComponentForm3()
	{
		$this->checkForm('Presenter:', 'form3', [
			'test' => '###', //FIXME: replace with value
		], FALSE);
	}


	public function testCreateComponentForm4()
	{
		$this->checkForm('Presenter:', 'form4', [
			'test' => '###', //FIXME: replace with value
		], '/x/y');
	}


	public function testCreateComponentFormWithCheckbox()
	{
		$this->checkForm('Presenter:', 'formWithCheckbox', [
			'hello' => FALSE,
			'test' => '###', //FIXME: replace with value
		], '/x/y');
	}


	public function testCreateComponentAjaxForm()
	{
		$this->checkForm('Presenter:', 'ajaxForm', [
			'test' => '###', //FIXME: replace with value
		], '/x/y/json');
	}


	public function testCreateComponentCsrfForm()
	{
		$this->checkForm('Presenter:', 'csrfForm', [
			'test' => '###', //FIXME: replace with value
		], '/x/y');
	}

}

(new PresenterPresenterTest)->run();
